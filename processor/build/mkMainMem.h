/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Mon May 15 22:20:51 EDT 2023
 * 
 */

/* Generation options: */
#ifndef __mkMainMem_h__
#define __mkMainMem_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkMainMem module */
class MOD_mkMainMem : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_BRAM<tUInt32,tUWide,tUInt8> INST_bram_memory;
  MOD_Reg<tUInt8> INST_bram_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_bram_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_bram_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_bram_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_bram_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_bram_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_bram_serverAdapter_outData_dequeueing;
  MOD_Wire<tUWide> INST_bram_serverAdapter_outData_enqw;
  MOD_Fifo<tUWide> INST_bram_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_bram_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_bram_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_bram_serverAdapter_writeWithResp;
  MOD_CReg<tUWide> INST_dl_d_0_rv;
 
 /* Constructor */
 public:
  MOD_mkMainMem(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_put;
  tUInt8 PORT_EN_get;
  tUWide PORT_put_req;
  tUWide PORT_get;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_get;
  tUInt8 DEF_WILL_FIRE_put;
  tUInt8 DEF_b__h863;
  tUWide DEF_dl_d_0_rv_port1__read____d53;
  tUWide DEF_dl_d_0_rv_port0__read____d65;
  tUInt8 DEF_bram_serverAdapter_s1___d35;
  tUInt8 DEF_bram_serverAdapter_cnt_3_whas____d13;
  tUInt8 DEF_bram_serverAdapter_cnt_2_whas____d11;
  tUInt8 DEF_bram_serverAdapter_cnt_1_whas____d10;
  tUInt8 DEF_bram_serverAdapter_outData_ff_i_notEmpty____d4;
  tUInt8 DEF_bram_serverAdapter_s1_5_BIT_0___d36;
 
 /* Local definitions */
 private:
  tUWide DEF_x_wget__h369;
  tUWide DEF_x_first__h254;
  tUWide DEF_v__h1438;
  tUWide DEF_x__h2280;
  tUWide DEF_x3__h2101;
  tUWide DEF_IF_bram_serverAdapter_outData_ff_i_notEmpty_TH_ETC___d58;
  tUWide DEF_x__h467;
  tUWide DEF__1_CONCAT_IF_bram_serverAdapter_outData_ff_i_no_ETC___d59;
  tUWide DEF__0_CONCAT_DONTCARE___d64;
 
 /* Rules */
 public:
  void RL_bram_serverAdapter_outData_enqueue();
  void RL_bram_serverAdapter_outData_dequeue();
  void RL_bram_serverAdapter_cnt_finalAdd();
  void RL_bram_serverAdapter_s1__dreg_update();
  void RL_bram_serverAdapter_stageReadResponseAlways();
  void RL_bram_serverAdapter_moveToOutFIFO();
  void RL_bram_serverAdapter_overRun();
  void RL_deq();
 
 /* Methods */
 public:
  void METH_put(tUWide ARG_put_req);
  tUInt8 METH_RDY_put();
  tUWide METH_get();
  tUInt8 METH_RDY_get();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMainMem &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkMainMem &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkMainMem &backing);
};

#endif /* ifndef __mkMainMem_h__ */
