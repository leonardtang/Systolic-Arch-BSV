/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Mon May 15 22:19:05 EDT 2023
 * 
 */

/* Generation options: */
#ifndef __mkSystolicArray_h__
#define __mkSystolicArray_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkProcessingElement.h"


/* Class declaration for the mkSystolicArray module */
class MOD_mkSystolicArray : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_mkProcessingElement INST_array_0_0;
  MOD_mkProcessingElement INST_array_0_1;
  MOD_mkProcessingElement INST_array_0_2;
  MOD_mkProcessingElement INST_array_0_3;
  MOD_mkProcessingElement INST_array_1_0;
  MOD_mkProcessingElement INST_array_1_1;
  MOD_mkProcessingElement INST_array_1_2;
  MOD_mkProcessingElement INST_array_1_3;
  MOD_mkProcessingElement INST_array_2_0;
  MOD_mkProcessingElement INST_array_2_1;
  MOD_mkProcessingElement INST_array_2_2;
  MOD_mkProcessingElement INST_array_2_3;
  MOD_mkProcessingElement INST_array_3_0;
  MOD_mkProcessingElement INST_array_3_1;
  MOD_mkProcessingElement INST_array_3_2;
  MOD_mkProcessingElement INST_array_3_3;
  MOD_Reg<tUInt32> INST_count;
  MOD_Reg<tUInt8> INST_file_valid;
  MOD_Wire<tUInt32> INST_left_0_0_port_0;
  MOD_Wire<tUInt32> INST_left_0_0_port_1;
  MOD_Reg<tUInt8> INST_left_0_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_0_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_0_0_register;
  MOD_Wire<tUInt32> INST_left_0_1_port_0;
  MOD_Wire<tUInt32> INST_left_0_1_port_1;
  MOD_Reg<tUInt8> INST_left_0_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_0_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_0_1_register;
  MOD_Wire<tUInt32> INST_left_0_2_port_0;
  MOD_Wire<tUInt32> INST_left_0_2_port_1;
  MOD_Reg<tUInt8> INST_left_0_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_0_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_0_2_register;
  MOD_Wire<tUInt32> INST_left_0_3_port_0;
  MOD_Wire<tUInt32> INST_left_0_3_port_1;
  MOD_Reg<tUInt8> INST_left_0_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_0_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_0_3_register;
  MOD_Wire<tUInt32> INST_left_1_0_port_0;
  MOD_Wire<tUInt32> INST_left_1_0_port_1;
  MOD_Reg<tUInt8> INST_left_1_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_1_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_1_0_register;
  MOD_Wire<tUInt32> INST_left_1_1_port_0;
  MOD_Wire<tUInt32> INST_left_1_1_port_1;
  MOD_Reg<tUInt8> INST_left_1_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_1_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_1_1_register;
  MOD_Wire<tUInt32> INST_left_1_2_port_0;
  MOD_Wire<tUInt32> INST_left_1_2_port_1;
  MOD_Reg<tUInt8> INST_left_1_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_1_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_1_2_register;
  MOD_Wire<tUInt32> INST_left_1_3_port_0;
  MOD_Wire<tUInt32> INST_left_1_3_port_1;
  MOD_Reg<tUInt8> INST_left_1_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_1_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_1_3_register;
  MOD_Wire<tUInt32> INST_left_2_0_port_0;
  MOD_Wire<tUInt32> INST_left_2_0_port_1;
  MOD_Reg<tUInt8> INST_left_2_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_2_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_2_0_register;
  MOD_Wire<tUInt32> INST_left_2_1_port_0;
  MOD_Wire<tUInt32> INST_left_2_1_port_1;
  MOD_Reg<tUInt8> INST_left_2_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_2_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_2_1_register;
  MOD_Wire<tUInt32> INST_left_2_2_port_0;
  MOD_Wire<tUInt32> INST_left_2_2_port_1;
  MOD_Reg<tUInt8> INST_left_2_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_2_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_2_2_register;
  MOD_Wire<tUInt32> INST_left_2_3_port_0;
  MOD_Wire<tUInt32> INST_left_2_3_port_1;
  MOD_Reg<tUInt8> INST_left_2_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_2_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_2_3_register;
  MOD_Wire<tUInt32> INST_left_3_0_port_0;
  MOD_Wire<tUInt32> INST_left_3_0_port_1;
  MOD_Reg<tUInt8> INST_left_3_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_3_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_3_0_register;
  MOD_Wire<tUInt32> INST_left_3_1_port_0;
  MOD_Wire<tUInt32> INST_left_3_1_port_1;
  MOD_Reg<tUInt8> INST_left_3_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_3_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_3_1_register;
  MOD_Wire<tUInt32> INST_left_3_2_port_0;
  MOD_Wire<tUInt32> INST_left_3_2_port_1;
  MOD_Reg<tUInt8> INST_left_3_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_3_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_3_2_register;
  MOD_Wire<tUInt32> INST_left_3_3_port_0;
  MOD_Wire<tUInt32> INST_left_3_3_port_1;
  MOD_Reg<tUInt8> INST_left_3_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_left_3_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_left_3_3_register;
  MOD_Reg<tUInt32> INST_out_file;
  MOD_Reg<tUInt32> INST_pe_iter_num;
  MOD_Reg<tUInt8> INST_pe_op_finished;
  MOD_Reg<tUInt8> INST_pe_receive_done;
  MOD_Reg<tUInt32> INST_pe_state;
  MOD_Reg<tUInt8> INST_ready;
  MOD_Reg<tUInt32> INST_res_0_0;
  MOD_Reg<tUInt32> INST_res_0_1;
  MOD_Reg<tUInt32> INST_res_0_2;
  MOD_Reg<tUInt32> INST_res_0_3;
  MOD_Reg<tUInt32> INST_res_1_0;
  MOD_Reg<tUInt32> INST_res_1_1;
  MOD_Reg<tUInt32> INST_res_1_2;
  MOD_Reg<tUInt32> INST_res_1_3;
  MOD_Reg<tUInt32> INST_res_2_0;
  MOD_Reg<tUInt32> INST_res_2_1;
  MOD_Reg<tUInt32> INST_res_2_2;
  MOD_Reg<tUInt32> INST_res_2_3;
  MOD_Reg<tUInt32> INST_res_3_0;
  MOD_Reg<tUInt32> INST_res_3_1;
  MOD_Reg<tUInt32> INST_res_3_2;
  MOD_Reg<tUInt32> INST_res_3_3;
  MOD_Wire<tUInt32> INST_top_0_0_port_0;
  MOD_Wire<tUInt32> INST_top_0_0_port_1;
  MOD_Reg<tUInt8> INST_top_0_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_0_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_0_0_register;
  MOD_Wire<tUInt32> INST_top_0_1_port_0;
  MOD_Wire<tUInt32> INST_top_0_1_port_1;
  MOD_Reg<tUInt8> INST_top_0_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_0_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_0_1_register;
  MOD_Wire<tUInt32> INST_top_0_2_port_0;
  MOD_Wire<tUInt32> INST_top_0_2_port_1;
  MOD_Reg<tUInt8> INST_top_0_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_0_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_0_2_register;
  MOD_Wire<tUInt32> INST_top_0_3_port_0;
  MOD_Wire<tUInt32> INST_top_0_3_port_1;
  MOD_Reg<tUInt8> INST_top_0_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_0_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_0_3_register;
  MOD_Wire<tUInt32> INST_top_1_0_port_0;
  MOD_Wire<tUInt32> INST_top_1_0_port_1;
  MOD_Reg<tUInt8> INST_top_1_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_1_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_1_0_register;
  MOD_Wire<tUInt32> INST_top_1_1_port_0;
  MOD_Wire<tUInt32> INST_top_1_1_port_1;
  MOD_Reg<tUInt8> INST_top_1_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_1_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_1_1_register;
  MOD_Wire<tUInt32> INST_top_1_2_port_0;
  MOD_Wire<tUInt32> INST_top_1_2_port_1;
  MOD_Reg<tUInt8> INST_top_1_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_1_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_1_2_register;
  MOD_Wire<tUInt32> INST_top_1_3_port_0;
  MOD_Wire<tUInt32> INST_top_1_3_port_1;
  MOD_Reg<tUInt8> INST_top_1_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_1_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_1_3_register;
  MOD_Wire<tUInt32> INST_top_2_0_port_0;
  MOD_Wire<tUInt32> INST_top_2_0_port_1;
  MOD_Reg<tUInt8> INST_top_2_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_2_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_2_0_register;
  MOD_Wire<tUInt32> INST_top_2_1_port_0;
  MOD_Wire<tUInt32> INST_top_2_1_port_1;
  MOD_Reg<tUInt8> INST_top_2_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_2_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_2_1_register;
  MOD_Wire<tUInt32> INST_top_2_2_port_0;
  MOD_Wire<tUInt32> INST_top_2_2_port_1;
  MOD_Reg<tUInt8> INST_top_2_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_2_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_2_2_register;
  MOD_Wire<tUInt32> INST_top_2_3_port_0;
  MOD_Wire<tUInt32> INST_top_2_3_port_1;
  MOD_Reg<tUInt8> INST_top_2_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_2_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_2_3_register;
  MOD_Wire<tUInt32> INST_top_3_0_port_0;
  MOD_Wire<tUInt32> INST_top_3_0_port_1;
  MOD_Reg<tUInt8> INST_top_3_0_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_3_0_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_3_0_register;
  MOD_Wire<tUInt32> INST_top_3_1_port_0;
  MOD_Wire<tUInt32> INST_top_3_1_port_1;
  MOD_Reg<tUInt8> INST_top_3_1_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_3_1_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_3_1_register;
  MOD_Wire<tUInt32> INST_top_3_2_port_0;
  MOD_Wire<tUInt32> INST_top_3_2_port_1;
  MOD_Reg<tUInt8> INST_top_3_2_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_3_2_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_3_2_register;
  MOD_Wire<tUInt32> INST_top_3_3_port_0;
  MOD_Wire<tUInt32> INST_top_3_3_port_1;
  MOD_Reg<tUInt8> INST_top_3_3_readBeforeLaterWrites_0;
  MOD_Reg<tUInt8> INST_top_3_3_readBeforeLaterWrites_1;
  MOD_Reg<tUInt32> INST_top_3_3_register;
  MOD_Reg<tUInt32> INST_x1_0_0;
  MOD_Reg<tUInt32> INST_x1_0_1;
  MOD_Reg<tUInt32> INST_x1_0_2;
  MOD_Reg<tUInt32> INST_x1_0_3;
  MOD_Reg<tUInt32> INST_x1_1_0;
  MOD_Reg<tUInt32> INST_x1_1_1;
  MOD_Reg<tUInt32> INST_x1_1_2;
  MOD_Reg<tUInt32> INST_x1_1_3;
  MOD_Reg<tUInt32> INST_x1_2_0;
  MOD_Reg<tUInt32> INST_x1_2_1;
  MOD_Reg<tUInt32> INST_x1_2_2;
  MOD_Reg<tUInt32> INST_x1_2_3;
  MOD_Reg<tUInt32> INST_x1_3_0;
  MOD_Reg<tUInt32> INST_x1_3_1;
  MOD_Reg<tUInt32> INST_x1_3_2;
  MOD_Reg<tUInt32> INST_x1_3_3;
  MOD_Reg<tUInt32> INST_x2_0_0;
  MOD_Reg<tUInt32> INST_x2_0_1;
  MOD_Reg<tUInt32> INST_x2_0_2;
  MOD_Reg<tUInt32> INST_x2_0_3;
  MOD_Reg<tUInt32> INST_x2_1_0;
  MOD_Reg<tUInt32> INST_x2_1_1;
  MOD_Reg<tUInt32> INST_x2_1_2;
  MOD_Reg<tUInt32> INST_x2_1_3;
  MOD_Reg<tUInt32> INST_x2_2_0;
  MOD_Reg<tUInt32> INST_x2_2_1;
  MOD_Reg<tUInt32> INST_x2_2_2;
  MOD_Reg<tUInt32> INST_x2_2_3;
  MOD_Reg<tUInt32> INST_x2_3_0;
  MOD_Reg<tUInt32> INST_x2_3_1;
  MOD_Reg<tUInt32> INST_x2_3_2;
  MOD_Reg<tUInt32> INST_x2_3_3;
 
 /* Constructor */
 public:
  MOD_mkSystolicArray(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_loadDataA_data;
  tUWide PORT_loadDataB_data;
  tUWide PORT_getResults;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_ready__h22539;
  tUInt32 DEF_x__h34270;
  tUInt32 DEF_b__h22533;
  tUInt32 DEF_b__h22919;
 
 /* Local definitions */
 private:
  tUInt32 DEF_TASK_fopen___d234;
  tUInt32 DEF_b__h41492;
  tUInt32 DEF_b__h41491;
  tUInt32 DEF_b__h41490;
  tUInt32 DEF_b__h41489;
  tUInt32 DEF_b__h39430;
  tUInt32 DEF_b__h39429;
  tUInt32 DEF_b__h39428;
  tUInt32 DEF_b__h39427;
  tUInt32 DEF_b__h37368;
  tUInt32 DEF_b__h37367;
  tUInt32 DEF_b__h37366;
  tUInt32 DEF_b__h37365;
  tUInt32 DEF_b__h34928;
  tUInt32 DEF_b__h34927;
  tUInt32 DEF_b__h34926;
  tUInt32 DEF_b__h34925;
  tUInt32 DEF_b__h31414;
  tUInt32 DEF_b__h31413;
  tUInt32 DEF_b__h31412;
  tUInt32 DEF_b__h31411;
  tUInt32 DEF_b__h29111;
  tUInt32 DEF_b__h29110;
  tUInt32 DEF_b__h29109;
  tUInt32 DEF_b__h29108;
  tUInt32 DEF_b__h26808;
  tUInt32 DEF_b__h26807;
  tUInt32 DEF_b__h26806;
  tUInt32 DEF_b__h26805;
  tUInt32 DEF_b__h24505;
  tUInt32 DEF_b__h24504;
  tUInt32 DEF_b__h24503;
  tUInt32 DEF_b__h24502;
  tUInt32 DEF_b__h22276;
  tUInt32 DEF_b__h22277;
  tUInt32 DEF_b__h21732;
  tUInt32 DEF_b__h21733;
  tUInt32 DEF_b__h21188;
  tUInt32 DEF_b__h21189;
  tUInt32 DEF_b__h20644;
  tUInt32 DEF_b__h20645;
  tUInt32 DEF_b__h20077;
  tUInt32 DEF_b__h20078;
  tUInt32 DEF_b__h19533;
  tUInt32 DEF_b__h19534;
  tUInt32 DEF_b__h18989;
  tUInt32 DEF_b__h18990;
  tUInt32 DEF_b__h18445;
  tUInt32 DEF_b__h18446;
  tUInt32 DEF_b__h17878;
  tUInt32 DEF_b__h17879;
  tUInt32 DEF_b__h17334;
  tUInt32 DEF_b__h17335;
  tUInt32 DEF_b__h16790;
  tUInt32 DEF_b__h16791;
  tUInt32 DEF_b__h16246;
  tUInt32 DEF_b__h16247;
  tUInt32 DEF_b__h15679;
  tUInt32 DEF_b__h15680;
  tUInt32 DEF_b__h15132;
  tUInt32 DEF_b__h15133;
  tUInt32 DEF_b__h14585;
  tUInt32 DEF_b__h14586;
  tUInt32 DEF_b__h14038;
  tUInt32 DEF_b__h14039;
  tUInt32 DEF_b__h13061;
  tUInt32 DEF_b__h13062;
  tUInt32 DEF_b__h12517;
  tUInt32 DEF_b__h12518;
  tUInt32 DEF_b__h11973;
  tUInt32 DEF_b__h11974;
  tUInt32 DEF_b__h11429;
  tUInt32 DEF_b__h11430;
  tUInt32 DEF_b__h10862;
  tUInt32 DEF_b__h10863;
  tUInt32 DEF_b__h10318;
  tUInt32 DEF_b__h10319;
  tUInt32 DEF_b__h9774;
  tUInt32 DEF_b__h9775;
  tUInt32 DEF_b__h9230;
  tUInt32 DEF_b__h9231;
  tUInt32 DEF_b__h8663;
  tUInt32 DEF_b__h8664;
  tUInt32 DEF_b__h8119;
  tUInt32 DEF_b__h8120;
  tUInt32 DEF_b__h7575;
  tUInt32 DEF_b__h7576;
  tUInt32 DEF_b__h7031;
  tUInt32 DEF_b__h7032;
  tUInt32 DEF_b__h6464;
  tUInt32 DEF_b__h6465;
  tUInt32 DEF_b__h5917;
  tUInt32 DEF_b__h5918;
  tUInt32 DEF_b__h5370;
  tUInt32 DEF_b__h5371;
  tUInt32 DEF_b__h4823;
  tUInt32 DEF_b__h4824;
  tUInt32 DEF_out_file___d693;
  tUInt8 DEF_pe_receive_done__h23056;
  tUInt8 DEF_pe_op_finished__h23120;
  tUInt32 DEF_IF_left_3_3_port_0_whas__20_THEN_left_3_3_port_ETC___d223;
  tUInt32 DEF_IF_top_3_3_port_0_whas__08_THEN_top_3_3_port_0_ETC___d111;
  tUInt32 DEF_IF_top_3_2_port_0_whas__01_THEN_top_3_2_port_0_ETC___d104;
  tUInt32 DEF_IF_top_3_1_port_0_whas__4_THEN_top_3_1_port_0__ETC___d97;
  tUInt32 DEF_IF_top_3_0_port_0_whas__7_THEN_top_3_0_port_0__ETC___d90;
  tUInt32 DEF_IF_left_2_3_port_0_whas__92_THEN_left_2_3_port_ETC___d195;
  tUInt32 DEF_IF_left_1_3_port_0_whas__64_THEN_left_1_3_port_ETC___d167;
  tUInt32 DEF_IF_left_0_3_port_0_whas__36_THEN_left_0_3_port_ETC___d139;
  tUInt32 DEF_IF_top_2_3_port_0_whas__0_THEN_top_2_3_port_0__ETC___d83;
  tUInt32 DEF_IF_top_1_3_port_0_whas__2_THEN_top_1_3_port_0__ETC___d55;
  tUInt32 DEF_IF_top_0_3_port_0_whas__4_THEN_top_0_3_port_0__ETC___d27;
  tUInt32 DEF_IF_top_2_2_port_0_whas__3_THEN_top_2_2_port_0__ETC___d76;
  tUInt32 DEF_IF_top_1_2_port_0_whas__5_THEN_top_1_2_port_0__ETC___d48;
  tUInt32 DEF_IF_top_0_2_port_0_whas__7_THEN_top_0_2_port_0__ETC___d20;
  tUInt32 DEF_IF_top_2_1_port_0_whas__6_THEN_top_2_1_port_0__ETC___d69;
  tUInt32 DEF_IF_top_1_1_port_0_whas__8_THEN_top_1_1_port_0__ETC___d41;
  tUInt32 DEF_IF_top_0_1_port_0_whas__0_THEN_top_0_1_port_0__ETC___d13;
  tUInt32 DEF_IF_top_2_0_port_0_whas__9_THEN_top_2_0_port_0__ETC___d62;
  tUInt32 DEF_IF_top_1_0_port_0_whas__1_THEN_top_1_0_port_0__ETC___d34;
  tUInt32 DEF_IF_top_0_0_port_0_whas_THEN_top_0_0_port_0_wge_ETC___d6;
  tUInt32 DEF_IF_left_3_2_port_0_whas__13_THEN_left_3_2_port_ETC___d216;
  tUInt32 DEF_IF_left_3_1_port_0_whas__06_THEN_left_3_1_port_ETC___d209;
  tUInt32 DEF_IF_left_3_0_port_0_whas__99_THEN_left_3_0_port_ETC___d202;
  tUInt32 DEF_IF_left_2_2_port_0_whas__85_THEN_left_2_2_port_ETC___d188;
  tUInt32 DEF_IF_left_2_1_port_0_whas__78_THEN_left_2_1_port_ETC___d181;
  tUInt32 DEF_IF_left_2_0_port_0_whas__71_THEN_left_2_0_port_ETC___d174;
  tUInt32 DEF_IF_left_1_2_port_0_whas__57_THEN_left_1_2_port_ETC___d160;
  tUInt32 DEF_IF_left_1_1_port_0_whas__50_THEN_left_1_1_port_ETC___d153;
  tUInt32 DEF_IF_left_1_0_port_0_whas__43_THEN_left_1_0_port_ETC___d146;
  tUInt32 DEF_IF_left_0_2_port_0_whas__29_THEN_left_0_2_port_ETC___d132;
  tUInt32 DEF_IF_left_0_1_port_0_whas__22_THEN_left_0_1_port_ETC___d125;
  tUInt32 DEF_IF_left_0_0_port_0_whas__15_THEN_left_0_0_port_ETC___d118;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d895;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d892;
  tUWide DEF__0_CONCAT_res_3_2_93_CONCAT_0___d894;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d889;
  tUWide DEF__0_CONCAT_res_3_1_90_CONCAT_0___d891;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d886;
  tUWide DEF__0_CONCAT_res_3_0_87_CONCAT_0___d888;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d883;
  tUWide DEF__0_CONCAT_res_2_3_84_CONCAT_0___d885;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d880;
  tUWide DEF__0_CONCAT_res_2_2_81_CONCAT_0___d882;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d877;
  tUWide DEF__0_CONCAT_res_2_1_78_CONCAT_0___d879;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d874;
  tUWide DEF__0_CONCAT_res_2_0_75_CONCAT_0___d876;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d871;
  tUWide DEF__0_CONCAT_res_1_3_72_CONCAT_0___d873;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d868;
  tUWide DEF__0_CONCAT_res_1_2_69_CONCAT_0___d870;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d865;
  tUWide DEF__0_CONCAT_res_1_1_66_CONCAT_0___d867;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d862;
  tUWide DEF__0_CONCAT_res_1_0_63_CONCAT_0___d864;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d859;
  tUWide DEF__0_CONCAT_res_0_3_60_CONCAT_0___d861;
  tUWide DEF__0_CONCAT_res_0_0_52_53_PLUS_0_CONCAT_res_0_1_5_ETC___d856;
  tUWide DEF__0_CONCAT_res_0_2_57_CONCAT_0___d858;
  tUWide DEF__0_CONCAT_res_0_0_52___d853;
  tUWide DEF__0_CONCAT_res_0_1_54_CONCAT_0___d855;
  tUWide DEF_res_3_3_96_CONCAT_0___d897;
 
 /* Rules */
 public:
  void RL_top_0_0_canonicalize();
  void RL_top_0_1_canonicalize();
  void RL_top_0_2_canonicalize();
  void RL_top_0_3_canonicalize();
  void RL_top_1_0_canonicalize();
  void RL_top_1_1_canonicalize();
  void RL_top_1_2_canonicalize();
  void RL_top_1_3_canonicalize();
  void RL_top_2_0_canonicalize();
  void RL_top_2_1_canonicalize();
  void RL_top_2_2_canonicalize();
  void RL_top_2_3_canonicalize();
  void RL_top_3_0_canonicalize();
  void RL_top_3_1_canonicalize();
  void RL_top_3_2_canonicalize();
  void RL_top_3_3_canonicalize();
  void RL_left_0_0_canonicalize();
  void RL_left_0_1_canonicalize();
  void RL_left_0_2_canonicalize();
  void RL_left_0_3_canonicalize();
  void RL_left_1_0_canonicalize();
  void RL_left_1_1_canonicalize();
  void RL_left_1_2_canonicalize();
  void RL_left_1_3_canonicalize();
  void RL_left_2_0_canonicalize();
  void RL_left_2_1_canonicalize();
  void RL_left_2_2_canonicalize();
  void RL_left_2_3_canonicalize();
  void RL_left_3_0_canonicalize();
  void RL_left_3_1_canonicalize();
  void RL_left_3_2_canonicalize();
  void RL_left_3_3_canonicalize();
  void RL_countCycles();
  void RL_set_outfile();
  void RL_pulse_data();
  void RL_pe_put();
  void RL_pe_compute();
 
 /* Methods */
 public:
  void METH_init();
  tUInt8 METH_RDY_init();
  void METH_loadDataA(tUWide ARG_loadDataA_data);
  tUInt8 METH_RDY_loadDataA();
  void METH_loadDataB(tUWide ARG_loadDataB_data);
  tUInt8 METH_RDY_loadDataB();
  tUWide METH_getResults();
  tUInt8 METH_RDY_getResults();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkSystolicArray &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkSystolicArray &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkSystolicArray &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkSystolicArray &backing);
};

#endif /* ifndef __mkSystolicArray_h__ */
