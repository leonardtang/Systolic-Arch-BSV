/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Sun May 14 22:36:46 EDT 2023
 * 
 */
#include "bluesim_primitives.h"
#include "mkProcessingElement.h"


/* Constructor */
MOD_mkProcessingElement::MOD_mkProcessingElement(tSimStateHdl simHdl,
						 char const *name,
						 Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_done_port_0(simHdl, "done_port_0", this, 1u, (tUInt8)0u),
    INST_done_port_1(simHdl, "done_port_1", this, 1u, (tUInt8)0u),
    INST_done_readBeforeLaterWrites_0(simHdl, "done_readBeforeLaterWrites_0", this, 1u, (tUInt8)1u),
    INST_done_readBeforeLaterWrites_1(simHdl, "done_readBeforeLaterWrites_1", this, 1u, (tUInt8)1u),
    INST_done_register(simHdl, "done_register", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_iter_count_port_0(simHdl, "iter_count_port_0", this, 32u, (tUInt8)0u),
    INST_iter_count_port_1(simHdl, "iter_count_port_1", this, 32u, (tUInt8)0u),
    INST_iter_count_readBeforeLaterWrites_0(simHdl,
					    "iter_count_readBeforeLaterWrites_0",
					    this,
					    1u,
					    (tUInt8)1u),
    INST_iter_count_readBeforeLaterWrites_1(simHdl,
					    "iter_count_readBeforeLaterWrites_1",
					    this,
					    1u,
					    (tUInt8)1u),
    INST_iter_count_register(simHdl, "iter_count_register", this, 32u, 0u, (tUInt8)0u),
    INST_left_port_0(simHdl, "left_port_0", this, 32u, (tUInt8)0u),
    INST_left_port_1(simHdl, "left_port_1", this, 32u, (tUInt8)0u),
    INST_left_readBeforeLaterWrites_0(simHdl, "left_readBeforeLaterWrites_0", this, 1u, (tUInt8)1u),
    INST_left_readBeforeLaterWrites_1(simHdl, "left_readBeforeLaterWrites_1", this, 1u, (tUInt8)1u),
    INST_left_register(simHdl, "left_register", this, 32u, 0u, (tUInt8)0u),
    INST_on(simHdl, "on", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_product(simHdl, "product", this, 32u, 0u, (tUInt8)0u),
    INST_received_left(simHdl, "received_left", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_received_top(simHdl, "received_top", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_top_port_0(simHdl, "top_port_0", this, 32u, (tUInt8)0u),
    INST_top_port_1(simHdl, "top_port_1", this, 32u, (tUInt8)0u),
    INST_top_readBeforeLaterWrites_0(simHdl, "top_readBeforeLaterWrites_0", this, 1u, (tUInt8)1u),
    INST_top_readBeforeLaterWrites_1(simHdl, "top_readBeforeLaterWrites_1", this, 1u, (tUInt8)1u),
    INST_top_register(simHdl, "top_register", this, 32u, 0u, (tUInt8)0u),
    INST_total_iters(simHdl, "total_iters", this, 32u, 0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  symbol_count = 34u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkProcessingElement::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h2685", SYM_DEF, &DEF_b__h2685, 32u);
  init_symbol(&symbols[1u], "b__h3767", SYM_DEF, &DEF_b__h3767, 32u);
  init_symbol(&symbols[2u], "done_port_0", SYM_MODULE, &INST_done_port_0);
  init_symbol(&symbols[3u], "done_port_1", SYM_MODULE, &INST_done_port_1);
  init_symbol(&symbols[4u],
	      "done_readBeforeLaterWrites_0",
	      SYM_MODULE,
	      &INST_done_readBeforeLaterWrites_0);
  init_symbol(&symbols[5u],
	      "done_readBeforeLaterWrites_1",
	      SYM_MODULE,
	      &INST_done_readBeforeLaterWrites_1);
  init_symbol(&symbols[6u], "done_register", SYM_MODULE, &INST_done_register);
  init_symbol(&symbols[7u], "done_register__h2995", SYM_DEF, &DEF_done_register__h2995, 1u);
  init_symbol(&symbols[8u], "iter_count_port_0", SYM_MODULE, &INST_iter_count_port_0);
  init_symbol(&symbols[9u], "iter_count_port_1", SYM_MODULE, &INST_iter_count_port_1);
  init_symbol(&symbols[10u],
	      "iter_count_readBeforeLaterWrites_0",
	      SYM_MODULE,
	      &INST_iter_count_readBeforeLaterWrites_0);
  init_symbol(&symbols[11u],
	      "iter_count_readBeforeLaterWrites_1",
	      SYM_MODULE,
	      &INST_iter_count_readBeforeLaterWrites_1);
  init_symbol(&symbols[12u], "iter_count_register", SYM_MODULE, &INST_iter_count_register);
  init_symbol(&symbols[13u], "left_port_0", SYM_MODULE, &INST_left_port_0);
  init_symbol(&symbols[14u], "left_port_1", SYM_MODULE, &INST_left_port_1);
  init_symbol(&symbols[15u],
	      "left_readBeforeLaterWrites_0",
	      SYM_MODULE,
	      &INST_left_readBeforeLaterWrites_0);
  init_symbol(&symbols[16u],
	      "left_readBeforeLaterWrites_1",
	      SYM_MODULE,
	      &INST_left_readBeforeLaterWrites_1);
  init_symbol(&symbols[17u], "left_register", SYM_MODULE, &INST_left_register);
  init_symbol(&symbols[18u], "on", SYM_MODULE, &INST_on);
  init_symbol(&symbols[19u], "on__h2794", SYM_DEF, &DEF_on__h2794, 1u);
  init_symbol(&symbols[20u], "product", SYM_MODULE, &INST_product);
  init_symbol(&symbols[21u], "RL_done_canonicalize", SYM_RULE);
  init_symbol(&symbols[22u], "RL_iter_count_canonicalize", SYM_RULE);
  init_symbol(&symbols[23u], "RL_left_canonicalize", SYM_RULE);
  init_symbol(&symbols[24u], "RL_pe_mac", SYM_RULE);
  init_symbol(&symbols[25u], "RL_top_canonicalize", SYM_RULE);
  init_symbol(&symbols[26u], "received_left", SYM_MODULE, &INST_received_left);
  init_symbol(&symbols[27u], "received_top", SYM_MODULE, &INST_received_top);
  init_symbol(&symbols[28u], "top_port_0", SYM_MODULE, &INST_top_port_0);
  init_symbol(&symbols[29u], "top_port_1", SYM_MODULE, &INST_top_port_1);
  init_symbol(&symbols[30u],
	      "top_readBeforeLaterWrites_0",
	      SYM_MODULE,
	      &INST_top_readBeforeLaterWrites_0);
  init_symbol(&symbols[31u],
	      "top_readBeforeLaterWrites_1",
	      SYM_MODULE,
	      &INST_top_readBeforeLaterWrites_1);
  init_symbol(&symbols[32u], "top_register", SYM_MODULE, &INST_top_register);
  init_symbol(&symbols[33u], "total_iters", SYM_MODULE, &INST_total_iters);
}


/* Rule actions */

void MOD_mkProcessingElement::RL_top_canonicalize()
{
  tUInt32 DEF_IF_top_port_1_whas_THEN_top_port_1_wget_ELSE_I_ETC___d7;
  tUInt32 DEF_b__h655;
  DEF_b__h633 = INST_top_register.METH_read();
  DEF_b__h655 = INST_top_port_1.METH_wget();
  DEF_b__h634 = INST_top_port_0.METH_wget();
  DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6 = INST_top_port_0.METH_whas() ? DEF_b__h634 : DEF_b__h633;
  DEF_IF_top_port_1_whas_THEN_top_port_1_wget_ELSE_I_ETC___d7 = INST_top_port_1.METH_whas() ? DEF_b__h655 : DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6;
  INST_top_register.METH_write(DEF_IF_top_port_1_whas_THEN_top_port_1_wget_ELSE_I_ETC___d7);
}

void MOD_mkProcessingElement::RL_left_canonicalize()
{
  tUInt32 DEF_IF_left_port_1_whas_THEN_left_port_1_wget_ELSE_ETC___d14;
  tUInt32 DEF_b__h1310;
  DEF_b__h1288 = INST_left_register.METH_read();
  DEF_b__h1310 = INST_left_port_1.METH_wget();
  DEF_b__h1289 = INST_left_port_0.METH_wget();
  DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13 = INST_left_port_0.METH_whas() ? DEF_b__h1289 : DEF_b__h1288;
  DEF_IF_left_port_1_whas_THEN_left_port_1_wget_ELSE_ETC___d14 = INST_left_port_1.METH_whas() ? DEF_b__h1310 : DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13;
  INST_left_register.METH_write(DEF_IF_left_port_1_whas_THEN_left_port_1_wget_ELSE_ETC___d14);
}

void MOD_mkProcessingElement::RL_done_canonicalize()
{
  tUInt8 DEF_IF_done_port_1_whas__5_THEN_done_port_1_wget___ETC___d21;
  DEF_done_register__h2995 = INST_done_register.METH_read();
  DEF_done_port_0_whas____d17 = INST_done_port_0.METH_whas();
  DEF_done_port_0_wget____d18 = INST_done_port_0.METH_wget();
  DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20 = DEF_done_port_0_whas____d17 ? DEF_done_port_0_wget____d18 : DEF_done_register__h2995;
  DEF_IF_done_port_1_whas__5_THEN_done_port_1_wget___ETC___d21 = INST_done_port_1.METH_whas() ? INST_done_port_1.METH_wget() : DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20;
  INST_done_register.METH_write(DEF_IF_done_port_1_whas__5_THEN_done_port_1_wget___ETC___d21);
}

void MOD_mkProcessingElement::RL_iter_count_canonicalize()
{
  tUInt32 DEF_IF_iter_count_port_1_whas__2_THEN_iter_count_p_ETC___d28;
  tUInt32 DEF_b__h2707;
  DEF_b__h2685 = INST_iter_count_register.METH_read();
  DEF_b__h2707 = INST_iter_count_port_1.METH_wget();
  DEF_b__h2686 = INST_iter_count_port_0.METH_wget();
  DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27 = INST_iter_count_port_0.METH_whas() ? DEF_b__h2686 : DEF_b__h2685;
  DEF_IF_iter_count_port_1_whas__2_THEN_iter_count_p_ETC___d28 = INST_iter_count_port_1.METH_whas() ? DEF_b__h2707 : DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27;
  INST_iter_count_register.METH_write(DEF_IF_iter_count_port_1_whas__2_THEN_iter_count_p_ETC___d28);
}

void MOD_mkProcessingElement::RL_pe_mac()
{
  tUInt32 DEF_product_6_PLUS_IF_top_readBeforeLaterWrites_1__ETC___d43;
  tUInt8 DEF_NOT_IF_iter_count_readBeforeLaterWrites_1_read_ETC___d48;
  tUInt8 DEF_done_readBeforeLaterWrites_1_read__0_OR_IF_don_ETC___d49;
  DEF_b__h2685 = INST_iter_count_register.METH_read();
  DEF_b__h2686 = INST_iter_count_port_0.METH_wget();
  DEF_b__h1288 = INST_left_register.METH_read();
  DEF_b__h633 = INST_top_register.METH_read();
  DEF_b__h1289 = INST_left_port_0.METH_wget();
  DEF_b__h634 = INST_top_port_0.METH_wget();
  DEF_b__h3767 = INST_total_iters.METH_read();
  DEF_done_register__h2995 = INST_done_register.METH_read();
  DEF_b__h3054 = INST_product.METH_read();
  DEF_done_port_0_whas____d17 = INST_done_port_0.METH_whas();
  DEF_done_port_0_wget____d18 = INST_done_port_0.METH_wget();
  DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20 = DEF_done_port_0_whas____d17 ? DEF_done_port_0_wget____d18 : DEF_done_register__h2995;
  DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13 = INST_left_port_0.METH_whas() ? DEF_b__h1289 : DEF_b__h1288;
  DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27 = INST_iter_count_port_0.METH_whas() ? DEF_b__h2686 : DEF_b__h2685;
  DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6 = INST_top_port_0.METH_whas() ? DEF_b__h634 : DEF_b__h633;
  DEF_done_readBeforeLaterWrites_1_read__0_OR_IF_don_ETC___d49 = INST_done_readBeforeLaterWrites_1.METH_read() || DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20;
  DEF_NOT_IF_iter_count_readBeforeLaterWrites_1_read_ETC___d48 = !primSLT8(1u,
									   32u,
									   (tUInt32)(DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27),
									   32u,
									   (tUInt32)(DEF_b__h3767));
  DEF_product_6_PLUS_IF_top_readBeforeLaterWrites_1__ETC___d43 = DEF_b__h3054 + ((tUInt32)(((tUInt64)(DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6)) * ((tUInt64)(DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13))));
  INST_product.METH_write(DEF_product_6_PLUS_IF_top_readBeforeLaterWrites_1__ETC___d43);
  if (DEF_NOT_IF_iter_count_readBeforeLaterWrites_1_read_ETC___d48)
    INST_on.METH_write((tUInt8)0u);
  INST_done_readBeforeLaterWrites_1.METH_write((tUInt8)1u);
  INST_done_port_1.METH_wset(DEF_done_readBeforeLaterWrites_1_read__0_OR_IF_don_ETC___d49);
}


/* Methods */

void MOD_mkProcessingElement::METH_init_pe()
{
  tUInt32 DEF_IF_iter_count_readBeforeLaterWrites_1_read__4__ETC___d50;
  DEF_b__h2685 = INST_iter_count_register.METH_read();
  DEF_b__h2686 = INST_iter_count_port_0.METH_wget();
  DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27 = INST_iter_count_port_0.METH_whas() ? DEF_b__h2686 : DEF_b__h2685;
  DEF_IF_iter_count_readBeforeLaterWrites_1_read__4__ETC___d50 = INST_iter_count_readBeforeLaterWrites_1.METH_read() ? 0u : DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27;
  INST_on.METH_write((tUInt8)1u);
  INST_product.METH_write(0u);
  INST_iter_count_readBeforeLaterWrites_1.METH_write((tUInt8)1u);
  INST_iter_count_port_1.METH_wset(DEF_IF_iter_count_readBeforeLaterWrites_1_read__4__ETC___d50);
}

tUInt8 MOD_mkProcessingElement::METH_RDY_init_pe()
{
  tUInt8 DEF_CAN_FIRE_init_pe;
  tUInt8 PORT_RDY_init_pe;
  DEF_on__h2794 = INST_on.METH_read();
  DEF_NOT_on_9___d51 = !DEF_on__h2794;
  DEF_CAN_FIRE_init_pe = DEF_NOT_on_9___d51;
  PORT_RDY_init_pe = DEF_CAN_FIRE_init_pe;
  return PORT_RDY_init_pe;
}

void MOD_mkProcessingElement::METH_flow_top(tUInt32 ARG_flow_top_x)
{
  tUInt8 DEF_NOT_done_readBeforeLaterWrites_0_read__9_0_AND_ETC___d61;
  tUInt32 DEF_IF_top_readBeforeLaterWrites_0_read__2_THEN_fl_ETC___d53;
  tUInt32 DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d58;
  DEF_b__h2685 = INST_iter_count_register.METH_read();
  DEF_b__h633 = INST_top_register.METH_read();
  DEF_done_register__h2995 = INST_done_register.METH_read();
  DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56 = DEF_b__h2685;
  DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d58 = INST_iter_count_readBeforeLaterWrites_0.METH_read() ? DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56 + 1u : DEF_b__h2685;
  DEF_IF_top_readBeforeLaterWrites_0_read__2_THEN_fl_ETC___d53 = INST_top_readBeforeLaterWrites_0.METH_read() ? ARG_flow_top_x : DEF_b__h633;
  DEF_NOT_done_readBeforeLaterWrites_0_read__9_0_AND_ETC___d61 = !INST_done_readBeforeLaterWrites_0.METH_read() && DEF_done_register__h2995;
  INST_top_readBeforeLaterWrites_0.METH_write((tUInt8)1u);
  INST_top_port_0.METH_wset(DEF_IF_top_readBeforeLaterWrites_0_read__2_THEN_fl_ETC___d53);
  INST_iter_count_readBeforeLaterWrites_0.METH_write((tUInt8)1u);
  INST_iter_count_port_0.METH_wset(DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d58);
  INST_done_readBeforeLaterWrites_0.METH_write((tUInt8)1u);
  INST_done_port_0.METH_wset(DEF_NOT_done_readBeforeLaterWrites_0_read__9_0_AND_ETC___d61);
}

tUInt8 MOD_mkProcessingElement::METH_RDY_flow_top()
{
  tUInt8 DEF_CAN_FIRE_flow_top;
  tUInt8 PORT_RDY_flow_top;
  DEF_b__h2685 = INST_iter_count_register.METH_read();
  DEF_b__h3767 = INST_total_iters.METH_read();
  DEF_on__h2794 = INST_on.METH_read();
  DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56 = DEF_b__h2685;
  DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63 = DEF_on__h2794 && primSLT8(1u,
											   32u,
											   (tUInt32)(DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56),
											   32u,
											   (tUInt32)(DEF_b__h3767));
  DEF_CAN_FIRE_flow_top = DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63;
  PORT_RDY_flow_top = DEF_CAN_FIRE_flow_top;
  return PORT_RDY_flow_top;
}

void MOD_mkProcessingElement::METH_flow_left(tUInt32 ARG_flow_left_y)
{
  tUInt32 DEF_IF_left_readBeforeLaterWrites_0_read__4_THEN_f_ETC___d65;
  DEF_b__h1288 = INST_left_register.METH_read();
  DEF_IF_left_readBeforeLaterWrites_0_read__4_THEN_f_ETC___d65 = INST_left_readBeforeLaterWrites_0.METH_read() ? ARG_flow_left_y : DEF_b__h1288;
  INST_left_readBeforeLaterWrites_0.METH_write((tUInt8)1u);
  INST_left_port_0.METH_wset(DEF_IF_left_readBeforeLaterWrites_0_read__4_THEN_f_ETC___d65);
}

tUInt8 MOD_mkProcessingElement::METH_RDY_flow_left()
{
  tUInt8 DEF_CAN_FIRE_flow_left;
  tUInt8 PORT_RDY_flow_left;
  DEF_b__h2685 = INST_iter_count_register.METH_read();
  DEF_b__h3767 = INST_total_iters.METH_read();
  DEF_on__h2794 = INST_on.METH_read();
  DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56 = DEF_b__h2685;
  DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63 = DEF_on__h2794 && primSLT8(1u,
											   32u,
											   (tUInt32)(DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56),
											   32u,
											   (tUInt32)(DEF_b__h3767));
  DEF_CAN_FIRE_flow_left = DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63;
  PORT_RDY_flow_left = DEF_CAN_FIRE_flow_left;
  return PORT_RDY_flow_left;
}

void MOD_mkProcessingElement::METH_set_total_iter(tUInt32 ARG_set_total_iter_z)
{
  INST_total_iters.METH_write(ARG_set_total_iter_z);
}

tUInt8 MOD_mkProcessingElement::METH_RDY_set_total_iter()
{
  tUInt8 DEF_CAN_FIRE_set_total_iter;
  tUInt8 PORT_RDY_set_total_iter;
  DEF_on__h2794 = INST_on.METH_read();
  DEF_NOT_on_9___d51 = !DEF_on__h2794;
  DEF_CAN_FIRE_set_total_iter = DEF_NOT_on_9___d51;
  PORT_RDY_set_total_iter = DEF_CAN_FIRE_set_total_iter;
  return PORT_RDY_set_total_iter;
}

tUInt32 MOD_mkProcessingElement::METH_get_output()
{
  tUInt32 PORT_get_output;
  DEF_b__h3054 = INST_product.METH_read();
  PORT_get_output = DEF_b__h3054;
  return PORT_get_output;
}

tUInt8 MOD_mkProcessingElement::METH_RDY_get_output()
{
  tUInt8 DEF_CAN_FIRE_get_output;
  tUInt8 PORT_RDY_get_output;
  DEF_done_register__h2995 = INST_done_register.METH_read();
  DEF_done_port_0_whas____d17 = INST_done_port_0.METH_whas();
  DEF_done_port_0_wget____d18 = INST_done_port_0.METH_wget();
  DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20 = DEF_done_port_0_whas____d17 ? DEF_done_port_0_wget____d18 : DEF_done_register__h2995;
  DEF_CAN_FIRE_get_output = DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20;
  PORT_RDY_get_output = DEF_CAN_FIRE_get_output;
  return PORT_RDY_get_output;
}


/* Reset routines */

void MOD_mkProcessingElement::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_total_iters.reset_RST(ARG_rst_in);
  INST_top_register.reset_RST(ARG_rst_in);
  INST_received_top.reset_RST(ARG_rst_in);
  INST_received_left.reset_RST(ARG_rst_in);
  INST_product.reset_RST(ARG_rst_in);
  INST_on.reset_RST(ARG_rst_in);
  INST_left_register.reset_RST(ARG_rst_in);
  INST_iter_count_register.reset_RST(ARG_rst_in);
  INST_done_register.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkProcessingElement::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkProcessingElement::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_done_port_0.dump_state(indent + 2u);
  INST_done_port_1.dump_state(indent + 2u);
  INST_done_readBeforeLaterWrites_0.dump_state(indent + 2u);
  INST_done_readBeforeLaterWrites_1.dump_state(indent + 2u);
  INST_done_register.dump_state(indent + 2u);
  INST_iter_count_port_0.dump_state(indent + 2u);
  INST_iter_count_port_1.dump_state(indent + 2u);
  INST_iter_count_readBeforeLaterWrites_0.dump_state(indent + 2u);
  INST_iter_count_readBeforeLaterWrites_1.dump_state(indent + 2u);
  INST_iter_count_register.dump_state(indent + 2u);
  INST_left_port_0.dump_state(indent + 2u);
  INST_left_port_1.dump_state(indent + 2u);
  INST_left_readBeforeLaterWrites_0.dump_state(indent + 2u);
  INST_left_readBeforeLaterWrites_1.dump_state(indent + 2u);
  INST_left_register.dump_state(indent + 2u);
  INST_on.dump_state(indent + 2u);
  INST_product.dump_state(indent + 2u);
  INST_received_left.dump_state(indent + 2u);
  INST_received_top.dump_state(indent + 2u);
  INST_top_port_0.dump_state(indent + 2u);
  INST_top_port_1.dump_state(indent + 2u);
  INST_top_readBeforeLaterWrites_0.dump_state(indent + 2u);
  INST_top_readBeforeLaterWrites_1.dump_state(indent + 2u);
  INST_top_register.dump_state(indent + 2u);
  INST_total_iters.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkProcessingElement::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 45u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_on_9___d51", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1288", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h1289", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h2685", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h2686", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h3054", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h3767", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h633", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h634", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "done_port_0_wget____d18", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "done_port_0_whas____d17", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "done_register__h2995", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "on__h2794", 1u);
  num = INST_done_port_0.dump_VCD_defs(num);
  num = INST_done_port_1.dump_VCD_defs(num);
  num = INST_done_readBeforeLaterWrites_0.dump_VCD_defs(num);
  num = INST_done_readBeforeLaterWrites_1.dump_VCD_defs(num);
  num = INST_done_register.dump_VCD_defs(num);
  num = INST_iter_count_port_0.dump_VCD_defs(num);
  num = INST_iter_count_port_1.dump_VCD_defs(num);
  num = INST_iter_count_readBeforeLaterWrites_0.dump_VCD_defs(num);
  num = INST_iter_count_readBeforeLaterWrites_1.dump_VCD_defs(num);
  num = INST_iter_count_register.dump_VCD_defs(num);
  num = INST_left_port_0.dump_VCD_defs(num);
  num = INST_left_port_1.dump_VCD_defs(num);
  num = INST_left_readBeforeLaterWrites_0.dump_VCD_defs(num);
  num = INST_left_readBeforeLaterWrites_1.dump_VCD_defs(num);
  num = INST_left_register.dump_VCD_defs(num);
  num = INST_on.dump_VCD_defs(num);
  num = INST_product.dump_VCD_defs(num);
  num = INST_received_left.dump_VCD_defs(num);
  num = INST_received_top.dump_VCD_defs(num);
  num = INST_top_port_0.dump_VCD_defs(num);
  num = INST_top_port_1.dump_VCD_defs(num);
  num = INST_top_readBeforeLaterWrites_0.dump_VCD_defs(num);
  num = INST_top_readBeforeLaterWrites_1.dump_VCD_defs(num);
  num = INST_top_register.dump_VCD_defs(num);
  num = INST_total_iters.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkProcessingElement::dump_VCD(tVCDDumpType dt,
				       unsigned int levels,
				       MOD_mkProcessingElement &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkProcessingElement::vcd_defs(tVCDDumpType dt, MOD_mkProcessingElement &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20) != DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20, 1u);
	backing.DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20 = DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20;
      }
      ++num;
      if ((backing.DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27) != DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27, 32u);
	backing.DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27 = DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27;
      }
      ++num;
      if ((backing.DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56) != DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56, 32u);
	backing.DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56 = DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56;
      }
      ++num;
      if ((backing.DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13) != DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13, 32u);
	backing.DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13 = DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13;
      }
      ++num;
      if ((backing.DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6) != DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6, 32u);
	backing.DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6 = DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6;
      }
      ++num;
      if ((backing.DEF_NOT_on_9___d51) != DEF_NOT_on_9___d51)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_on_9___d51, 1u);
	backing.DEF_NOT_on_9___d51 = DEF_NOT_on_9___d51;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_b__h1288) != DEF_b__h1288)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1288, 32u);
	backing.DEF_b__h1288 = DEF_b__h1288;
      }
      ++num;
      if ((backing.DEF_b__h1289) != DEF_b__h1289)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h1289, 32u);
	backing.DEF_b__h1289 = DEF_b__h1289;
      }
      ++num;
      if ((backing.DEF_b__h2685) != DEF_b__h2685)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h2685, 32u);
	backing.DEF_b__h2685 = DEF_b__h2685;
      }
      ++num;
      if ((backing.DEF_b__h2686) != DEF_b__h2686)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h2686, 32u);
	backing.DEF_b__h2686 = DEF_b__h2686;
      }
      ++num;
      if ((backing.DEF_b__h3054) != DEF_b__h3054)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h3054, 32u);
	backing.DEF_b__h3054 = DEF_b__h3054;
      }
      ++num;
      if ((backing.DEF_b__h3767) != DEF_b__h3767)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h3767, 32u);
	backing.DEF_b__h3767 = DEF_b__h3767;
      }
      ++num;
      if ((backing.DEF_b__h633) != DEF_b__h633)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h633, 32u);
	backing.DEF_b__h633 = DEF_b__h633;
      }
      ++num;
      if ((backing.DEF_b__h634) != DEF_b__h634)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h634, 32u);
	backing.DEF_b__h634 = DEF_b__h634;
      }
      ++num;
      if ((backing.DEF_done_port_0_wget____d18) != DEF_done_port_0_wget____d18)
      {
	vcd_write_val(sim_hdl, num, DEF_done_port_0_wget____d18, 1u);
	backing.DEF_done_port_0_wget____d18 = DEF_done_port_0_wget____d18;
      }
      ++num;
      if ((backing.DEF_done_port_0_whas____d17) != DEF_done_port_0_whas____d17)
      {
	vcd_write_val(sim_hdl, num, DEF_done_port_0_whas____d17, 1u);
	backing.DEF_done_port_0_whas____d17 = DEF_done_port_0_whas____d17;
      }
      ++num;
      if ((backing.DEF_done_register__h2995) != DEF_done_register__h2995)
      {
	vcd_write_val(sim_hdl, num, DEF_done_register__h2995, 1u);
	backing.DEF_done_register__h2995 = DEF_done_register__h2995;
      }
      ++num;
      if ((backing.DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63) != DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63)
      {
	vcd_write_val(sim_hdl, num, DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63, 1u);
	backing.DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63 = DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63;
      }
      ++num;
      if ((backing.DEF_on__h2794) != DEF_on__h2794)
      {
	vcd_write_val(sim_hdl, num, DEF_on__h2794, 1u);
	backing.DEF_on__h2794 = DEF_on__h2794;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20, 1u);
      backing.DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20 = DEF_IF_done_port_0_whas__7_THEN_done_port_0_wget___ETC___d20;
      vcd_write_val(sim_hdl, num++, DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27, 32u);
      backing.DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27 = DEF_IF_iter_count_port_0_whas__4_THEN_iter_count_p_ETC___d27;
      vcd_write_val(sim_hdl, num++, DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56, 32u);
      backing.DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56 = DEF_IF_iter_count_readBeforeLaterWrites_0_read__4__ETC___d56;
      vcd_write_val(sim_hdl, num++, DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13, 32u);
      backing.DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13 = DEF_IF_left_port_0_whas__0_THEN_left_port_0_wget___ETC___d13;
      vcd_write_val(sim_hdl, num++, DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6, 32u);
      backing.DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6 = DEF_IF_top_port_0_whas_THEN_top_port_0_wget_ELSE_t_ETC___d6;
      vcd_write_val(sim_hdl, num++, DEF_NOT_on_9___d51, 1u);
      backing.DEF_NOT_on_9___d51 = DEF_NOT_on_9___d51;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_b__h1288, 32u);
      backing.DEF_b__h1288 = DEF_b__h1288;
      vcd_write_val(sim_hdl, num++, DEF_b__h1289, 32u);
      backing.DEF_b__h1289 = DEF_b__h1289;
      vcd_write_val(sim_hdl, num++, DEF_b__h2685, 32u);
      backing.DEF_b__h2685 = DEF_b__h2685;
      vcd_write_val(sim_hdl, num++, DEF_b__h2686, 32u);
      backing.DEF_b__h2686 = DEF_b__h2686;
      vcd_write_val(sim_hdl, num++, DEF_b__h3054, 32u);
      backing.DEF_b__h3054 = DEF_b__h3054;
      vcd_write_val(sim_hdl, num++, DEF_b__h3767, 32u);
      backing.DEF_b__h3767 = DEF_b__h3767;
      vcd_write_val(sim_hdl, num++, DEF_b__h633, 32u);
      backing.DEF_b__h633 = DEF_b__h633;
      vcd_write_val(sim_hdl, num++, DEF_b__h634, 32u);
      backing.DEF_b__h634 = DEF_b__h634;
      vcd_write_val(sim_hdl, num++, DEF_done_port_0_wget____d18, 1u);
      backing.DEF_done_port_0_wget____d18 = DEF_done_port_0_wget____d18;
      vcd_write_val(sim_hdl, num++, DEF_done_port_0_whas____d17, 1u);
      backing.DEF_done_port_0_whas____d17 = DEF_done_port_0_whas____d17;
      vcd_write_val(sim_hdl, num++, DEF_done_register__h2995, 1u);
      backing.DEF_done_register__h2995 = DEF_done_register__h2995;
      vcd_write_val(sim_hdl, num++, DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63, 1u);
      backing.DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63 = DEF_on_9_AND_IF_iter_count_readBeforeLaterWrites_0_ETC___d63;
      vcd_write_val(sim_hdl, num++, DEF_on__h2794, 1u);
      backing.DEF_on__h2794 = DEF_on__h2794;
    }
}

void MOD_mkProcessingElement::vcd_prims(tVCDDumpType dt, MOD_mkProcessingElement &backing)
{
  INST_done_port_0.dump_VCD(dt, backing.INST_done_port_0);
  INST_done_port_1.dump_VCD(dt, backing.INST_done_port_1);
  INST_done_readBeforeLaterWrites_0.dump_VCD(dt, backing.INST_done_readBeforeLaterWrites_0);
  INST_done_readBeforeLaterWrites_1.dump_VCD(dt, backing.INST_done_readBeforeLaterWrites_1);
  INST_done_register.dump_VCD(dt, backing.INST_done_register);
  INST_iter_count_port_0.dump_VCD(dt, backing.INST_iter_count_port_0);
  INST_iter_count_port_1.dump_VCD(dt, backing.INST_iter_count_port_1);
  INST_iter_count_readBeforeLaterWrites_0.dump_VCD(dt,
						   backing.INST_iter_count_readBeforeLaterWrites_0);
  INST_iter_count_readBeforeLaterWrites_1.dump_VCD(dt,
						   backing.INST_iter_count_readBeforeLaterWrites_1);
  INST_iter_count_register.dump_VCD(dt, backing.INST_iter_count_register);
  INST_left_port_0.dump_VCD(dt, backing.INST_left_port_0);
  INST_left_port_1.dump_VCD(dt, backing.INST_left_port_1);
  INST_left_readBeforeLaterWrites_0.dump_VCD(dt, backing.INST_left_readBeforeLaterWrites_0);
  INST_left_readBeforeLaterWrites_1.dump_VCD(dt, backing.INST_left_readBeforeLaterWrites_1);
  INST_left_register.dump_VCD(dt, backing.INST_left_register);
  INST_on.dump_VCD(dt, backing.INST_on);
  INST_product.dump_VCD(dt, backing.INST_product);
  INST_received_left.dump_VCD(dt, backing.INST_received_left);
  INST_received_top.dump_VCD(dt, backing.INST_received_top);
  INST_top_port_0.dump_VCD(dt, backing.INST_top_port_0);
  INST_top_port_1.dump_VCD(dt, backing.INST_top_port_1);
  INST_top_readBeforeLaterWrites_0.dump_VCD(dt, backing.INST_top_readBeforeLaterWrites_0);
  INST_top_readBeforeLaterWrites_1.dump_VCD(dt, backing.INST_top_readBeforeLaterWrites_1);
  INST_top_register.dump_VCD(dt, backing.INST_top_register);
  INST_total_iters.dump_VCD(dt, backing.INST_total_iters);
}
